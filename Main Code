import numpy as np
import cv2
face_cas = cv2.CascadeClassifier('C:\\Users\\saide\\Documents\\Haar Cascade\\haarcascade_frontalface_default.xml') 
eye_cas = cv2.CascadeClassifier('C:\\Users\\saide\\Documents\\Haar Cascade\\haarcascade_eye.xml') 
smile_cas = cv2.CascadeClassifier('C:\\Users\\saide\\Documents\\Haar Cascade\\haarcascade_smile.xml') 
nose_cas = cv2.CascadeClassifier('C:\\Users\\saide\\Documents\\Haar Cascade\\haarcascade_mcs_nose.xml') 

def detect(gray, frame): 
    #To detect the face, we use
    face = face_cas.detectMultiScale(gray, 1.3, 5)  #where 1.3 is the scaling factor, and 5 is the number of nearest neighbors
    for (x, y, w, h) in face: 
        cv2.rectangle(frame, (x, y), ((x + w), (y + h)), (255, 0, 0), 2) 
        roi_gray = gray[y:y + h, x:x + w] 
        roi_color = frame[y:y + h, x:x + w]
        eyes = eye_cas.detectMultiScale(roi_gray)
        for (ex, ey, ew, eh) in eyes:
            cv2.rectangle(roi_color,(ex,ey),(ex+ew,ey+eh),(0,255,0),2)
        nose = nose_cas.detectMultiScale(roi_gray)
        for (nx, ny, nw, nh) in nose:
            cv2.rectangle(roi_color,(nx,ny),(nx+nw,ny+nh),(255,255,0),2)
        smiles = smile_cas.detectMultiScale(roi_gray, 1.8, 20) 
        for (sx, sy, sw, sh) in smile: 
            cv2.rectangle(roi_color, (sx, sy), ((sx + sw), (sy + sh)), (0, 0, 255), 2) 
    return frame 

video_capture = cv2.VideoCapture(0) 
while True: 
   # Captures video_capture frame by frame 
    ret, frame = video_capture.read()  
  
    # To capture image in monochrome                     
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)   
      
    # calls the detect() function     
    canvas = detect(gray, frame)    
  
    # Displays the result on camera feed                      
    cv2.imshow('Video', canvas)  
  
    # The control breaks once q key is pressed                         
    if cv2.waitKey(1) & 0xff == ord('q'):                
        break
  
# Release the capture once all the processing is done. 
video_capture.release()                                  
cv2.destroyAllWindows() 
